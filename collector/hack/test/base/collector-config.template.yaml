apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: wavefront-collector
data:
  collector.yaml: |
    clusterName: YOUR_CLUSTER_NAME
    enableEvents: false
    enableDiscovery: true
    flushInterval: FLUSH_INTERVALs
    defaultCollectionInterval: COLLECTION_INTERVALs
    experimental: YOUR_EXPERIMENTAL_FEATURES

    sinks:
    - proxyAddress: wavefront-proxy.NAMESPACE.svc.cluster.local:2878
      filters:
        # Filter out generated labels
        tagExclude:
        - 'label?controller?revision*'
        - 'label?pod?template*'
        - 'annotation_kubectl_kubernetes_io_last_applied_configuration'
        - 'label?failure-domain?beta?kubernetes?io/*'
        tagGuaranteeList:
        - 'label.failure-domain.beta.kubernetes.io/zone'


    sources:
      kubernetes_source:
        url: 'https://kubernetes.default.svc'
        kubeletPort: 10250
        kubeletHttps: true
        useServiceAccount: true
        insecure: true
        prefix: 'kubernetes.'

        filters:
          metricDenyList:
          - 'kubernetes.sys_container.*'
          tagExclude:
          - 'label.kubernetes.io/arch'

      internal_stats_source:
        prefix: 'kubernetes.'
        filters:
          tagExclude:
          - 'url'

      kubernetes_state_source:
        prefix: 'kubernetes.'
        filters:
          tagExclude:
          - 'label.kubernetes.io/arch'

      kubernetes_cadvisor_source:
        prefix: 'kubernetes.cadvisor.'
        filters:
          metricAllowList:
          - "kubernetes.cadvisor.container.cpu.cfs.throttled.seconds.total.counter"
          - "kubernetes.cadvisor.container.cpu.cfs.throttled.periods.total.counter"

      telegraf_sources:
      # enable all telegraf plugins
      - plugins: [ ]
      - plugins:  [ mysql ]
        conf: |
            servers = ["root:password123@tcp(mysql-release.collector-targets.svc.cluster.local:3306)/?tls=false"]
            table_schema_databases                    = []
            gather_table_io_waits                     = true
            gather_table_lock_waits                   = true
            gather_index_io_waits                     = true
        filters:
          tagExclude:
          - server

      prometheus_sources:
      - url: 'https://kubernetes.default.svc:443/metrics'
        name: 'etcd-workqueue'
        httpConfig:
          bearer_token_file: '/var/run/secrets/kubernetes.io/serviceaccount/token'
          tls_config:
            ca_file: '/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
            insecure_skip_verify: true
        prefix: 'kubernetes.controlplane.'
        convertHistograms: true
        filters:
          metricAllowList:
          - 'kubernetes.controlplane.etcd.request.duration.seconds'
          - 'kubernetes.controlplane.etcd.db.total.size.in.bytes.gauge'
          - 'kubernetes.controlplane.workqueue.adds.total.counter'
          - 'kubernetes.controlplane.workqueue.queue.duration.seconds'

      - url: 'https://kubernetes.default.svc:443/metrics'
        name: 'apiserver'
        httpConfig:
          bearer_token_file: '/var/run/secrets/kubernetes.io/serviceaccount/token'
          tls_config:
            ca_file: '/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
            insecure_skip_verify: true
        prefix: 'kubernetes.controlplane.'
        convertHistograms: true
        filters:
          metricAllowList:
          - 'kubernetes.controlplane.apiserver.request.duration.seconds'
          - 'kubernetes.controlplane.apiserver.request.total.counter'
          - 'kubernetes.controlplane.apiserver.storage.objects.gauge'
          metricTagAllowList:
            resource:
            - 'customresourcedefinitions'
            - 'namespaces'
            - 'lease'
            - 'nodes'
            - 'pods'
            - 'tokenreviews'
            - 'subjectaccessreviews'


    # discovery rules for auto-discovery of pods and services
    discovery:
      enable_runtime_plugins: true
      annotation_excludes:
      - labels:
          please-exclude-from-discovery: ['true']
      plugins:
      - name: coredns-discovery
        type: prometheus
        selectors:
          images:
          - '*coredns:*'
          labels:
            k8s-app:
            - kube-dns
        port: 9153
        path: /metrics
        scheme: http
        prefix: kubernetes.controlplane.
        convertHistograms: true
        filters:
          metricAllowList:
          - 'kubernetes.controlplane.coredns.dns.request.duration.seconds'
          - 'kubernetes.controlplane.coredns.dns.responses.total.counter'
