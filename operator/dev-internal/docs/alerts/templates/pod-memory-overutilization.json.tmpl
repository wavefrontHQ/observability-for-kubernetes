{
  "name": "Pod Memory Overutilization",
  "alertType": "THRESHOLD",
  "alertSources": [
    {
      "name": "Alert Condition",
      "query": "join((avg(align(1m, ts(\"kubernetes.pod.memory.usage\", cluster=\"K8S_CLUSTER_NAME\")), pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid, sources)) AS ts1 INNER JOIN (avg(align(1m, ts(\"kubernetes.pod.memory.limit\", cluster=\"K8S_CLUSTER_NAME\")), pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid, sources)) AS ts2 USING(source, pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid), metric='memory_ratio', source=ts1.source, pod_name=ts1.pod_name, namespace_name=ts1.namespace_name, workload_name=ts1.workload_name, workload_kind=ts1.workload_kind, cluster=ts1.cluster, cluster_uuid=ts1.cluster_uuid, (ts1 / ts2) * 100)",
      "queryType": "WQL",
      "alertSourceType": ["CONDITION"],
      "hidden": true
    },
    {
      "name": "Display Condition",
      "query": "ceil(${Alert Condition}).gt(70)",
      "queryType": "WQL",
      "alertSourceType": ["VARIABLE","AUDIT"],
      "hidden": false
    }
  ],
  "conditions": {
    "warn": "join((avg(align(1m, ts(\"kubernetes.pod.memory.usage\", cluster=\"K8S_CLUSTER_NAME\")), pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid, sources)) AS ts1 INNER JOIN (avg(align(1m, ts(\"kubernetes.pod.memory.limit\", cluster=\"K8S_CLUSTER_NAME\")), pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid, sources)) AS ts2 USING(source, pod_name, namespace_name, workload_name, workload_kind, cluster, cluster_uuid), metric='memory_ratio', source=ts1.source, pod_name=ts1.pod_name, namespace_name=ts1.namespace_name, workload_name=ts1.workload_name, workload_kind=ts1.workload_kind, cluster=ts1.cluster, cluster_uuid=ts1.cluster_uuid, (ts1 / ts2) * 100) > 90"
  },
  "displayExpression": "${Display Condition}",
  "minutes": 10,
  "resolveAfterMinutes": 5,
  "tags": {
    "customerTags": [
      "integration.kubernetes"
    ]
  },
  "alertChartUnits": "%",
  "chartSettings": {
    "min": 0
  }
}
