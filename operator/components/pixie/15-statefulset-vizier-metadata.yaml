apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: pl-monitoring
    component: vizier
  name: vizier-metadata
  namespace: observability-system
  annotations:
    wavefront.com/conditionally-provision: '{{ .TLSCertsSecretExists }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-metadata
  serviceName: vizier-metadata
  template:
    metadata:
      annotations:
        px.dev/metrics_port: "50400"
        px.dev/metrics_scrape: "true"
      labels:
        app: pl-monitoring
        component: vizier
        name: vizier-metadata
        plane: control
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: Exists
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: Exists
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - env:
            - name: PL_JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  key: jwt-signing-key
                  name: pl-cluster-secrets
            - name: PL_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PL_MAX_EXPECTED_CLOCK_SKEW
              value: "2000"
            - name: PL_RENEW_PERIOD
              value: "7500"
            - name: PL_ETCD_OPERATOR_ENABLED
              value: "false"
          envFrom:
            - configMapRef:
                name: pl-tls-config
          image: projects.registry.vmware.com/tanzu_observability/pixie-oss/pixie-prod/vizier-metadata_server_image:0.14.7
          livenessProbe:
            httpGet:
              path: /healthz
              port: 50400
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 10
          name: app
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 50400
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /certs
              name: certs
            - mountPath: /metadata
              name: metadata-volume
      initContainers:
        - command:
            - sh
            - -c
            - set -xe; URL="${PROTOCOL}://${SERVICE_NAME}:${SERVICE_PORT}${HEALTH_PATH}"; until [ $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting for ${URL}"; sleep 2; done;
          env:
            - name: SERVICE_NAME
              value: pl-nats-mgmt
            - name: SERVICE_PORT
              value: "8222"
            - name: HEALTH_PATH
              value: ""
            - name: PROTOCOL
              value: http
          image: projects.registry.vmware.com/tanzu_observability/bitnami/os-shell:11
          name: nats-wait
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        fsGroup: 10100
        runAsGroup: 10100
        runAsNonRoot: true
        runAsUser: 10100
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: metadata-service-account
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoExecute
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - effect: NoExecute
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
      volumes:
        - name: certs
          secret:
            secretName: service-tls-certs
        - name: metadata-volume
          persistentVolumeClaim:
            claimName: metadata-pv-claim
  updateStrategy:
    type: RollingUpdate
