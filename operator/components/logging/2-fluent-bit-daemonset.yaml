apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wavefront-logging
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      name: wavefront-logging
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        proxy-available-replicas: "{{ .ProxyAvailableReplicas }}"
        configHash: "{{ .ConfigHash }}"
      labels:
        name: wavefront-logging
        app.kubernetes.io/name: wavefront
        app.kubernetes.io/component: logging
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
      {{- if .Tolerations }}
{{ .Tolerations | toYaml | indent 8 }}
      {{- end }}
      {{- if .ImagePullSecret }}
      imagePullSecrets:
        - name: {{ .ImagePullSecret }}
      {{- end }}
      containers:
      - image: {{ .ImageRegistry }}/kubernetes-operator-fluentbit:{{ .LoggingVersion }}
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CLUSTER_NAME
            value: {{.ClusterName}}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: fluent-bit
        ports:
        - containerPort: 2020
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /fluent-bit/etc/fluent-bit.conf
          name: config
          subPath: fluent-bit.conf
        - mountPath: /fluent-bit/etc/custom_parsers.conf
          name: config
          subPath: custom_parsers.conf
        - mountPath: /var/log
          name: varlog
        - name: varlogcontainers
          mountPath: /var/log/containers
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /etc/machine-id
          name: etcmachineid
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: wavefront-logging
      serviceAccountName: wavefront-logging
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: wavefront-logging-config
        name: config
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - name: varlogcontainers
        hostPath:
          path: /var/log/containers
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - hostPath:
          path: /etc/machine-id
          type: File
        name: etcmachineid
